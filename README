# Execution instructions

# 1)
# Create the following links on the root of the directory of the package (where
# this README file is). Make sure to select your *own* local versions of torch
# and gridtk to avoid surprises like nightly build erases and the such.

ln -s /idiap/home/aanjos/work/torch/main torch
ln -s /idiap/home/aanjos/work/gridtk gridtk

# 2)
# Tune configuration at: config/gmm_replay.py

vim config/gmm_replay.py

# 3)
# Run replay_dct_features.py to create the features. This step only need the
# original database videos as input.

./shell.py -- script/replay_dct_features.py --config=config/gmm_replay.py

# 4)
# Run gmm_ubm_replay.py to create the UBM from selected features.
# Note: if you use ~1k files, it will take ~3 hours to complete and there is
# no way to split it on the grid.
# This step requires all features for the training set/enrollment are
# calculated.

./shell.py -- script/gmm_ubm_replay.py --config=config/gmm_replay.py

# 5)
# Run gmm_stats_replay.py to create the background statistics for all
# datafiles so we can run score normalization later.
# This step requires that the UBM is calculated and all features are available.

./shell.py -- script/gmm_stats_replay.py --config=config/gmm_replay.py

# This will take a lot of time to go through all the videos in the replay
# database. You can optionally submit the command to the grid, if you are at
# Idiap, with the following:

./shell.py -- ./script/grid_gmmstats_replay.py --config=config/gmm_replay.py

# This command will spread the GMM UBM statistics calculation over 1300
# processes that will run in about 5-10 minutes each. So, the whole job will
# take a few hours to complete - taking into consideration current settings
# for SGE at Idiap.

# 6)
# Generate the models for all clients. Note: You can do this in parallel with
# step 5 above as it only depends on the input features pre-calculated at step
# 3.

./shell.py -- ./script/gmm_models_replay.py --config=config/gmm_replay.py

# If you think the above job is too slow, you also have a grid alternative:

./shell.py -- ./script/grid_gmmmodels_replay.py --config=config/gmm_replay.py

# 7)
# Create accumulated statistics for the number of frames for which you desire
# to plot your curves with:

./shell.py -- ./script/replay_accstats.py --config=config/gmm_replay.py
